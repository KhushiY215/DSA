class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n=nums.size();
        int ind=-1;
//find break-point i
        for(int i=n-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                ind=i;
                break;
            }
        }
//if no breakpoints present means its the last permutation already so display the first one.
        if(ind==-1){
            reverse(nums.begin(),nums.end());
            return;//since its void so just write return here otherwise error, break won't work
        }
        // find smallest no. greater than nums[i] and swap
        for(int i=n-1;i>=ind;i--){
            if(nums[i]>nums[ind]){
                swap(nums[i],nums[ind]);
                break;
            }
        }
        //reverse the remaining from ind+1
        reverse(nums.begin()+ind+1,nums.end());
        
    }
};
