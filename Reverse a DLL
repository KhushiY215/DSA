//reverse a doubly linked list
class Solution {
  public:
    // Function to reverse a doubly linked list
    DLLNode* reverseDLL(DLLNode* head) {
        if(head==NULL || head->next==NULL) return head;
        DLLNode* current= head;
        DLLNode* last;
        while(current!=NULL)
        {
            
            last=current->prev;
            current->prev=current->next;
            current->next=last;
            
           current=current->prev; 
        }
        return last->prev;
    }
};
